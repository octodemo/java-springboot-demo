# Rolling update configuration
rollingUpdate:
  maxSurge: 1
  maxUnavailable: 0

# Horizontal Pod Autoscaler configuration
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  
v1:
  replicas: 2  # Increased for better availability during updates
  springAppContainer:
    env:
      changelogVersion: changelog_version-3.3.xml
      dbUrl: jdbc:postgresql://postgres-database-service:5432/postgres
      password: admin123
      redisHost: redis-database-service
      userName: postgresadmin
      searchFeatureEnabled: "false"
    image:
      repository: ghcr.io/octodemo/java-springboot-demo
      tag: "370"
    resources:
      limits:
        cpu: "1"
        memory: 768Mi  # Increased memory limit
      requests:
        cpu: 250m      # Increased CPU request for better performance
        memory: 256Mi  # Increased memory request
v2:
  replicas: 2
  springAppContainer:
    env:
      changelogVersion: changelog_version-3.3.xml
      dbUrl: jdbc:postgresql://postgres-database-service:5432/postgres
      password: admin123
      redisHost: redis-database-service
      userName: postgresadmin
      searchFeatureFlag: "true"
    image:
      repository: ghcr.io/octodemo/java-springboot-demo
      tag: "371"
    resources:
      limits:
        cpu: "1"
        memory: 768Mi  # Increased memory limit
      requests:
        cpu: 250m      # Increased CPU request for better performance
        memory: 256Mi  # Increased memory request
kubernetesClusterDomain: cluster.local
postgresConfig:
  POSTGRES_DB: postgresdb
  POSTGRES_PASSWORD: admin123
  POSTGRES_USER: postgresadmin
postgresDatabaseDeployment:
  postgresDatabaseContainer:
    image:
      repository: postgres
      tag: "10.4"
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: "0.5"
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 256Mi
  replicas: 1
postgresDatabaseService:
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  type: ClusterIP
pvc:
  postgresPvClaim:
    storageClass: manual
    storageRequest: 1Gi
redisDatabaseDeployment:
  redisDatabaseContainer:
    image:
      repository: redis
      tag: latest
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 250m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi
  replicas: 1
redisDatabaseService:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  type: ClusterIP
springAppService:
  ports:
  - name: http
    port: 80
    targetPort: 8086
  type: LoadBalancer
